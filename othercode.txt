
/*
// function timeParse(time) {
//     _time = time.split(':');
//     //case 12:1
//     if(_time[1].length===1 && _time[0].length===2){
//         return _time[0]+":0"+_time[1];
//
//     }
//     //case 1:23
//     else if(_time[1].length===2 && _time[0].length===1){
//         return "0"+_time[0]+":"+_time[1];
//     }
//     //case 1:2
//     else if(_time[1].length===1 && _time[0].length===1){
//          return "0"+_time[0]+":0"+_time[1];
//     }
//     else {
//         return time;
//     }
// }
var modem = require('modem').Modem();
//console.log(modem)
modem.open('COM8', function() {
  // modem.getMessages(function() {
  //   console.log(arguments);
  // });

    modem.smsReceived(function(cmti) {
    console.log(cmti);
  });

  modem.on('smsReceived', function(sms) {
    console.log(sms);
  });
     modem.on('dataReceived', function(sms) {
    console.log(sms);
  });

    modem.on('sms received', function(sms) {
    console.log(sms);
  });
    modem.on('ring', function(msisdn) {
    console.log('Ringing', msisdn);
  });
});

// var modem = require('modem').Modem();
// console.log(modem);
// modem.open('COM8', function(err,success) {
//   if (err){
//     console.log('Connection failed')
//   }
//   else {
//       console.log('Connection Successful');
//
//       modem.getMessages(function() {
//           console.log(arguments);
//       });
//       // modem.smsReceived('smsReceived',function(sms) {
//       //     console.log(sms);
//       // });
//   }
// });
//
// modem.on('smsReceived', function(sms) {
//     console.log(sms);
// });




//03333494681
//03460389641
//03218981548
// var modem = require('modem').Modem();
// var express=require('express');
// var bodyparser=require('body-parser');
// var app = express()
//
// app.use(bodyparser.json());
// app.use(bodyparser.urlencoded({extended:true}));
//
// modem.open('COM8', function(err,success) {
//   if (err){
//     console.log('Connection failed')
//   }
//   else {
//     console.log('Connection Successful');
//   }
// });
//
// app.post('/',function(req,res){
//     modem.sms({receiver:req.body.contact, text:req.body.sms,encoding:'16bit'}, function(err, sent_ids) {
//       console.log('>>', arguments);
//       if(err)
//       console.log('Error sending sms:', err);
//       else
//       console.log('Message sent successfully, here are reference ids:', sent_ids.join(','));
//       res.send({ some: 'Sent' });
//     });
// });
//
// var port=process.env.PORT||3000;
// var server=app.listen(port,function () {
//     var listenport=server.address().port;
//     console.log("server is listening at port: "+listenport);
// })


*/


var serialport = require('serialport');
var SerialPort = serialport.SerialPort;
var pg = require('pg');
const connectionString = "postgres://odoo:odoo@localhost/bank-latest";
const client = new pg.Client(connectionString);
client.connect(function (err) {
    if(err) {
        throw err;
    }
    else {
        console.log("Postgres connected successfully");
    }
});
var split = require('split');
var port = new SerialPort("COM8",{
   baudrate: 921600
});

port.on('open',onOpen);
port.on('data',onDataReceived);

function dataInsert(record) {
    // Stream results back one row at a time
    record = record.split(' ');
    del(port);
    var query_s = client.query("SELECT bank_code,branch_code,street FROM res_partner WHERE rf_id='"+record[1]+"'");
    query_s.on('row',function (row) {
        if(row.bank_code == 'JSBL'){
            query_ins = client.query("INSERT INTO visit_time(bank_name,bc,address,visit_date,visit_time)values('"+27+"','"+row.branch_code+"','"+row.street+"','"+record[2]+"','"+record[3]+"')");
            console.log(record);

        }
        if(row.bank_code == 'MBL'){
            query_ins = client.query("INSERT INTO visit_time(bank_name,bc,address,visit_date,visit_time)values('"+28+"','"+row.branch_code+"','"+row.street+"','"+record[2]+"','"+record[3]+"')");
            console.log(record);

        }
        if(row.bank_code == 'UBL'){
            query_ins = client.query("INSERT INTO visit_time(bank_name,bc,address,visit_date,visit_time)values('"+29+"','"+row.branch_code+"','"+row.street+"','"+record[2]+"','"+record[3]+"')");
            console.log(record);

        }
        if(row.bank_code == 'FBL'){
            query_ins = client.query("INSERT INTO visit_time(bank_name,bc,address,visit_date,visit_time)values('"+30+"','"+row.branch_code+"','"+row.street+"','"+record[2]+"','"+record[3]+"')");
            console.log(record);

        }
        if(row.bank_code == 'NBP'){
            query_ins = client.query("INSERT INTO visit_time(bank_name,bc,address,visit_date,visit_time)values('"+31+"','"+row.branch_code+"','"+row.street+"','"+record[2]+"','"+record[3]+"')");
            console.log(record);

        }
        if(row.bank_code == 'HBL'){
            query_ins = client.query("INSERT INTO visit_time(bank_name,bc,address,visit_date,visit_time)values('"+32+"','"+row.branch_code+"','"+row.street+"','"+record[2]+"','"+record[3]+"')");
            console.log(record);
        }


        //query_ins = client.query("INSERT INTO guard_tracking(card_no,bc,bank_code,address,visit_date,visit_time)values('"+record[1]+"','"+row.branch_code+"','"+row.bank_code+"','"+row.street+"','"+record[2]+"','"+record[3]+"')");
    });

}

function onOpen(err) {
    if(!err){
        console.log("Successfully Connected");
    }
}

function onDataReceived(data) {
    data = data.toString();
    var arr = data.split(',');
   // console.log(data);
    try {
    // the synchronous code that we want to catch thrown errors on
        if (arr[4] !== undefined){
            var narr = arr[4].split('\n');
            if (narr[1] !== undefined){
                dataInsert(narr[1]);
                del(port);
               // console.log("jo manga tha: "+ narr[1] );
                //query = client.query("INSERT INTO guard_tracking(card_no)values('"+narr[1]+"')");
            }
        }
    } catch (err) {
        console.log(err)
    }
}

function read(serial) {
    serial.write("AT+CMGF=1");
    serial.write('\r');
    serial.write("AT+CPMS=\"MT\"");
    serial.write('\r');
    serial.write("AT+CMGL=\"REC READ\"");
    serial.write('\r');
}

function del(serial) {
    serial.write("AT+CMGF=1");
    serial.write('\r');
    serial.write("AT+CMGD=1,0");
    serial.write('\r');
}

setInterval(function(){ read(port) }, 3000);


/*query_s.on('row',function (row) {

    console.log(row)
});*/
//("insert into complaint_messages(message)values('"+self.sms.replace('\n',' ')+"','"+str(self.technician_name.name)+"','"+self.techContact+"','0','"+str(datetime.now().date())+"')")

//REC UNREAD
//AT+CMGF=1 // Set the GSM Module in text mode
//AT+CNMI=2,2,0,0,0 // AT Command to receive live sms
//SM sim
//ME modem
//MT both from sim n modem
//REC UNREAD
//AT+CMGF=1 // Set the GSM Module in text mode
//AT+CNMI=2,2,0,0,0 // AT Command to receive live sms
//SM sim
//ME modem
//MT both from sim n modem


/**
 * Created by pk on 5/24/2017.
 */
var pg = require('pg');
/* Database connection string */
const connectionString = "postgres://odoo:odoo@localhost/mutual-erp-bank";
const client = new pg.Client(connectionString);
client.connect(function (err) {
    if(err) {
        throw err;
    }
    else {
        console.log("Postgres connected successfully");
    }
});

var serialport = require('serialport');
var SerialPort = serialport.SerialPort;
const yargs = require('yargs');

var port = new SerialPort(yargs.argv.port,{
    baudrate: 115200,
    dataBits: 8,
    parity: 'none',
    stopBits: 1,
    flowControl:false,
    parser: SerialPort.parsers.readline('\n')
});

port.on('data',onDataReceived);
function onDataReceived(data) {
    data=data.toString().split(' ');
    if(data.length==4){
        //console.log("Received Data:"+data);
        dataInsert(data)
    }
}

/* Function for insertion of data into database */
function dataInsert(record) {
    //converts time from 24hr to 12hr
    timeCon = tConvert(record[3].toString().trim());
    //fetch record from db
    var query_s = client.query("SELECT bank_code,branch_code,street,city,force_code FROM res_partner WHERE rf_id='" + record[1] + "'");
    // Stream results back one row at a time
    query_s.on('row', function (row) {
        if(row){
            //row is the record of table
            query_ins = client.query("INSERT INTO mutual_guard_tracking(bank_code,branch_code,address,city,visit_date,visit_time,force_code,device_no)values('" + row.bank_code + "','" + row.branch_code + "','" + row.street +"','" + row.city + "','" + record[2] + "','" + timeCon + "','" + row.force_code +"','" + record[0] + "')");
            console.log("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>SMS Received>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> "
                + "\n" + "Device ID:", record[0]
                + "\n" + "Station ID:", record[1]
                + "\n" + "Date:", record[2]
                + "\n" + "Time:", record[3] +
                "\nConverted Time: ", timeCon
                + "\n\n" + "SMS has been logged into db successfully");
        }
    });
}

/* Function for conversion of Time from 24hr to 12hr */
function tConvert (time) {
  // Check correct time format and split into components
  time = time.toString ().match (/^([01]\d|2[0-3])(:)([0-5]\d)(:[0-5]\d)?$/) || [time];
  if (time.length > 1) { // If time format correct
    time = time.slice (1);  // Remove full string match value
    time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM
    time[0] = +time[0] % 12 || 12; // Adjust hours
  }
  return time.join (''); // return adjusted time or original string
}

port.on('data',function (data) {
    data = data.toString().split(',');
    //console.log(data);
    if((data[0].split(":"))[0].trim()=="+CMTI"){
        //console.log("Data Received at index number: "+data[1]);
        readText(port,data[1]);
        setTimeout(function(){
             del(port,data[1])
        }, 500);
    }
});

function readText(serial,index) {
    console.log("Reading... SMS at index "+index);
    serial.write("AT+CMGR="+index);
    serial.write('\r');
}

function del(serial,index) {
    console.log("Deleting SMS at index....."+index);
    serial.write("AT+CMGD="+index);
    serial.write('\r');
}
